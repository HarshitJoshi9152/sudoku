HARSHIT JOSHI   18/2/2020 5:15 PM

HARSHIT JOSHI   3/9/2020 00:07

came to know about script:type = "module" \
while trying to use `import util from "C:/backup/Documents/html/javaScript/projects/js_util/utility"`


i have been able to code the sudoku box and i also realised that the reason for 
one of the lines drawn in the canvas appearing differently is most of times the possiblity that
the last/first line may not have full space to get rendered (width wise).


QUERY
we cannot use const in simple loops but we can in 

for (const i in range(1,201)) {
    console.log(i)
}

....why ?

OBS

came to know why i was getting 

VM2295:1 Uncaught TypeError: Cannot set property '1' of undefined
    at <anonymous>:1:9
while trying to assign sudoku values from string to array.
    sudoku[Math.floor(i/9)][i%9] = nums[i];


DUMB ERROR 1:42

i was inspecting sudokus[0][0] repetedly in the console without realising it.
i thought that the value assignment loop was only assigning the first line of sudoku_nums_string
because of this and i spent quite some time working on it.

both ways work
    for (let i = 0; i < 9; i++) 
    {
        for (let j = 0; j < 9; j++)
        {
            sudoku[i][j] = nums[acc];
            acc++
        }
    }

    for (let i = 0; i < 81; i++){
        sudoku[Math.floor(i/9)][i%9] = nums[i];
    }

1:47 removed the range function coz NO NEED OF THAT


idea of generating sudoku vs transfering pre made sudokus from the kaggle database

QUERY
    renderValueInPlace = function(val, { x, y }) 
    {
        let x = this.x + this.unit * x;
        let y = this.y + this.unit * y;
        ctx.strokeText(val, x, y)
    }

    error :
         x has already been declared

should unit be decided mathematically or should the used be able to specify it ?
    mathematically i guess; 

    constructor(x, y, unit, ctx, sudokuMap, fs)
    {
        this.sudokuMap = sudokuMap;
        this.unit = unit;
        this.x = x, this.y = y;
        this.ctx = ctx;
        this.digitPadding = unit/2;
        this.fontSize = fs
    }


this.unit = (e-s)/9; vs this.unit = e-s/9;

font size should also be decided mathematically

i want to learn about vs code tricks tips cutomisation and other cool stuff

selecting a font for programming
    bisquit font
    DejaVu Sans Mono
    ubuntu mono

14:13
theme currently being used 
gruvbox Material dark
some version of noctis
shades of purple

current font family :: Consolas, 'Courier New', monospace


HarshitJoshi9152 3/20/2020 5:13

i wasted my time trying to loop over matrixRangeValues([0,0],[5,2])
i still have to experiment with the matrixRangeValues() function 

4/12/2020 1:32 PM

all positions on the sudoku must be refered to by the coordinate system ie (x-pos, y-pos)
and NOT by the 2D array indexing system in which the 1st value would represent the y-pos and the
next the x-pos .That is why when getting the value from a cube we would use [2ndArg][1stArg] when the 
function accepts position in arguments as (1st: x-pos, 2nd: y-pos);

wrote a new function for getting matrix range indexes

newMatrixRangeMethod([0,6],[2,8]) does nt work because of division by zero in the
declaration of xval

WOW 1 simple correction fixed 3 errors // division by zero in declaration of yval var.

// testing code
const experimentalValues = [
    [[6,0],[8,2],"$"], // buggy
    [[7,2],[8,8],"!"], // buggy
    [[2,7],[6,8],"&"], // buggy lol
];

for (let i of experimentalValues) {
    console.table("testing for :", ...i);
    test_matrix_range(i[0], i[1], newMatrixRangeMethod, i[2] || "*");
}

but what was the difference between both the functions ?

refactored the main.js a little bit and moved the renamed newMatrixRangeMethod to getRangeCoors
and moved it to a new file

11:32 pm

so i just did <code>solver.getValue(solver.missingCoordinates[1]) == 0</code> and i got 
true then i did <code>solver.getValue(solver.missingCoordinates[1]) !== 0</code> and i still
got true. wtf javascript.

for full context
<code> // Solver Class
    getValue = (pos) => {
        return this.sudoku[pos[1]][pos[0]];
        // because in 2d array first y-pos is given then x-pos is given
    }

    // testingPurposes
    verifyMissingValues = () => {
        const missingValueObj = {};
        for (let i of this.missingCoordinates){
            if(this.getValue([i[0], i[1]]) !== 0){
                missingValueObj[i.toString()] = this.getValue([i[0], i[1]]);
            }
        }
        return missingValueObj;
    }
</code>

in javascript why are "0" == 0 and "0" !== 0 both true ?
oh i know now ... == allows coersion but === does not allow coersion.

even with the uncompatible coordinate system in different functions the
discrepancy were just 12 locations <code>Object.keys(solver.verifyMissingValues()).length</code>
wow !!


